{"version":3,"sources":["../../../app/controller/secure/index.js"],"names":["SecureController","req","res","dbHandler","verifyUser","CRUDUserBootstrap","data","statusCode","validToken","verify","formatUpdateData","nameChangeProtection","updateUser","_id","err","msg"],"mappings":"AAAA;;AAEA;;;;;;;AAOA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAGMA,gB;;;;;;;;;;;;4EAEWC,G,EAAKC,G;;;;;;AACZC,yB,GAAY,oB;AACZC,0B,GAAa,gBAAUC,iB;AACzBC,oB,WAAMC,U,WAAYC,U;;;AAEtBA,6BAAaJ,WAAWK,MAAX,CAAkBR,GAAlB,CAAb;;AAEAK,uBAAOF,WAAWM,gBAAX,CAA4BT,GAA5B,EAAiC,IAAjC,CAAP;;;uBAEaG,WAAWO,oBAAX,CAAgCH,UAAhC,EAA4CF,IAA5C,EAAkDH,SAAlD,C;;;AAAbG,oB;;AACA,oBAAI;AACFA,yBAAOH,UAAUS,UAAV,CAAqBJ,WAAWK,GAAhC,EAAqCP,IAArC,CAAP;AACAC,+BAAa,KAAKA,UAAL,CAAgB,SAAhB,CAAb;AACD,iBAHD,CAGE,OAAOO,GAAP,EAAa;AACbR,yBAAO,EAACQ,KAAK,IAAN,EAAYC,KAAK,6CAAjB,EAAP;AACAR,+BAAa,KAAKA,UAAL,CAAgB,OAAhB,CAAb;AACD;;iDAEM,uBAAaD,IAAb,EAAmBC,UAAnB,C","file":"index.js","sourcesContent":["'use strict'\n\n/**\n * @name SecureController\n * @author Cooper Campbell\n * Created at: 5/15/2017\n * A controller to handle logic for the Secure routes.\n**/\n\n// Require DB Handler\nimport UserDBHandler from './../../db/handler/user';\nimport Response from '../Response';\nimport Utilities, { CRUDUserBootstrap } from './../../utils';\n\n\nclass SecureController extends Response {\n\n  async meUpdate(req, res) {\n    const dbHandler = new UserDBHandler();\n    const verifyUser = Utilities.CRUDUserBootstrap;\n    let data, statusCode, validToken;\n\n    validToken = verifyUser.verify(req);\n\n    data = verifyUser.formatUpdateData(req, true);\n\n    data = await verifyUser.nameChangeProtection(validToken, data, dbHandler);\n    try {\n      data = dbHandler.updateUser(validToken._id, data);\n      statusCode = this.statusCode['success'];\n    } catch( err ) {\n      data = {err: true, msg: 'Something went wrong when updating the user'};\n      statusCode = this.statusCode['error'];\n    }\n\n    return new Response(data, statusCode);\n  }\n\n\n}\n"]}