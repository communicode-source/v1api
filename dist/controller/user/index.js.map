{"version":3,"sources":["../../../app/controller/user/index.js"],"names":["UserController","req","res","contents","body","sanitized","dbHandler","isLocal","provider","status","data","newUser","user","statusCode","generate","console","log","unique","createUser","controller"],"mappings":"AAAA;;AAEA;;;;;;;;;;;;;;AAOA;;;;AACA;;;;AAEA;;;;AAEA;;;;;;;;;;;AAHA;;AAEA;;;IAIMA,c;;;;;;;;;;;;4EAEYC,G,EAAKC,G;;;;;;AACnB;AACMC,wB,GAAWF,IAAIG,IAAJ,CAASC,S;AACpBC,yB,GAAY,oB;AACZC,uB,GAAWN,IAAIG,IAAJ,CAASC,SAAT,CAAmBG,QAAnB,KAAgC,O;AACjD;;AACIC,sB,WAAQC,I,WAAMC,O;;AAGZC,oB,GAAOT,Q;;AAEX;;qBACQI,O;;;;;;uBAAiB,8BAAYK,IAAZ,EAAkBN,SAAlB,C;;;;;;;;;;uBAAsD,qCAAmBH,QAAnB,C;;;;8BAA8BG,S;;kEAAW,C;;;;;;AAAxHM,oB;;;AAEA;AACAH,yBAAS,KAAKI,UAAL,CAAgB,SAAhB,CAAT;AACAH,uBAAO,cAAII,QAAJ,CAAa,wDAAb,CAAP;;;;;;;;;AAGAC,wBAAQC,GAAR;AACAP,yBAAS,KAAKI,UAAL,CAAgB,SAAhB,CAAT;AACAH,uBAAO,GAAP;;;iDAGK,uBAAaA,IAAb,EAAmBD,MAAnB,C;;;;;;;;;;;;;;;;;;;8EAIUR,G,EAAKC,G;;;;;;AACpB;AACMC,wB,GAAWF,IAAIG,IAAJ,CAASC,S;AACpBC,yB,GAAY,oB;AACZC,uB,GAAWN,IAAIG,IAAJ,CAASC,SAAT,CAAmBG,QAAnB,KAAgC,O;AACjD;;AACIC,sB,WAAQC,I,WAAMC,O;;;qBAILJ,O;;;;;+BAAW,kCAAgBJ,QAAhB,EAA0BG,SAA1B,C;;;;;;uBAA6C,qCAAmBH,QAAnB,C;;;;;;AAAnEQ,uB;;uBAEqB,6BAAWA,OAAX,EAAoBL,SAApB,C;;;AAAfW,sB;;uBAGUX,UAAUY,UAAV,CAAqBP,OAArB,C;;;AAAhBA,uB;;;AAEA;AACAF,yBAAS,KAAKI,UAAL,CAAgB,SAAhB,CAAT;AACAH,uBAAO,cAAII,QAAJ,CAAa,gCAAcH,OAAd,CAAb,CAAP;;;;;;;;;AAGAI,wBAAQC,GAAR;AACAP,yBAAS,KAAKI,UAAL,CAAgB,SAAhB,CAAT;AACAH,uBAAO,GAAP;;;kDAGK,uBAAaA,IAAb,EAAmBD,MAAnB,C;;;;;;;;;;;;;;;;;;;;;AAKN,IAAIU,kCAAa,IAAInB,cAAJ,EAAjB","file":"index.js","sourcesContent":["'use strict'\n\n/**\n * @name UserController\n * @author Cooper Campbell\n * Created at: 5/19/2017\n * A controller to handle the login, update, logout, and sign up of users.\n**/\n\nimport jwt from './../jwt'\nimport Response from './../Response.js'\n// Require the Handler for the user.\nimport UserHandler from './../../db/handler/user'\n// Utilities for the logins and sign ups because they contain a lot of logic.\nimport {LoginDataPull, verifyExternalLoginUser, isLocalUser, createLocalUser, createExternalUser, uniqueUser, ensureOnlyOne} from './../../utils/validations'\n\n\nclass UserController extends Response {\n\n  async loginUser(req, res) {\n    // Declarations of constants\n    const contents = req.body.sanitized\n    const dbHandler = new UserHandler()\n    const isLocal = (req.body.sanitized.provider === 'local')\n    // Declarations of  variables\n    let status, data, newUser\n\n    try {\n      let user = contents\n\n      // Gets the user from the database and does checking to ensure passwords match, etc.\n      user = (isLocal) ? await isLocalUser(user, dbHandler) : await uniqueUser(await createExternalUser(contents), dbHandler, 1)\n\n      // Create the status code and the user JWT as data.\n      status = this.statusCode['success']\n      data = jwt.generate(LoginDataPull(uniqueUser))\n\n    } catch(e) {\n      console.log(e)\n      status = this.statusCode['success']\n      data = 100\n    }\n\n    return new Response(data, status)\n  }\n\n\n    async createUser(req, res) {\n      // Declarations of constants\n      const contents = req.body.sanitized\n      const dbHandler = new UserHandler()\n      const isLocal = (req.body.sanitized.provider === 'local')\n      // Declarations of  variables\n      let status, data, newUser\n\n      try {\n        // Getting the user Json from the req.\n        newUser = (isLocal) ? createLocalUser(contents, dbHandler) : await createExternalUser(contents)\n        // Checks to ensure the new user is in fact unique.\n        const unique = await uniqueUser(newUser, dbHandler)\n\n        // Creating the new user in the DB and returning it.\n        newUser = await dbHandler.createUser(newUser)\n\n        // Create the status code and the user JWT as data.\n        status = this.statusCode['success']\n        data = jwt.generate(LoginDataPull(newUser))\n\n      } catch(e) {\n        console.log(e)\n        status = this.statusCode['success']\n        data = 100\n      }\n\n      return new Response(data, status)\n    }\n\n}\n\nexport let controller = new UserController()\n"]}