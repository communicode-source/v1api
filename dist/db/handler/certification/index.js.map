{"version":3,"sources":["../../../../app/db/handler/certification/index.js"],"names":["mongoose","require","Certification","Promise","CertificationDBHandler","find","exec","id","console","log","findById","module","exports"],"mappings":"AAAA;AACA;;;;;;;;;;;AAMC,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACD,IAAMC,gBAAsBD,QAAQ,6BAAR,CAA5B;AACAD,SAASG,OAAT,GAAuBF,QAAQ,UAAR,CAAvB;;IAGMG,sB;;;;;;;;;AAEJ;;;8BAGU;AACR,aAAOF,cAAcG,IAAd,CAAmB,EAAnB,EAAuBC,IAAvB,EAAP;AACD;AACD;;;;;;;;6BAKSC,E,EAAI;AACXC,cAAQC,GAAR,CAAYF,EAAZ;AACA,aAAOL,cAAcQ,QAAd,CAAuBH,EAAvB,EAA2BD,IAA3B,EAAP;AACD;AACD;;;;;;;;+BAKWC,E,EAAG;AACZC,cAAQC,GAAR,CAAYF,EAAZ;AACA,aAAOL,cAAcQ,QAAd,CAAuBH,EAAvB,EAA2BD,IAA3B,EAAP;AACD;;;;;;AAGHK,OAAOC,OAAP,GAAiBR,sBAAjB","file":"index.js","sourcesContent":["'use strict';\n/**\n * @name CertificationDBHandler\n * @author Daniel Adelfinsky\n * Last Edited at: 5/18/17\n * A handler that holds all the functions for finding certifications\n **/\n var mongoose = require('mongoose');\nconst Certification       = require('./../../model/certification');\nmongoose.Promise     = require('bluebird');\n\n\nclass CertificationDBHandler {\n\n  /**\n   *Lists all Certifications in the certifications collections\n  **/\n  findAll() {\n    return Certification.find({}).exec();\n  }\n  /**\n   * find()\n   * @param id - the mongo id of the specific user\n   * Returns a specified certification from the collection by the _id\n  **/\n  findById(id) {\n    console.log(id);\n    return Certification.findById(id).exec();\n  }\n  /**\n   * find()\n   * @param id - the mongo id of the specific user\n   * Returns a specified certification from the collection by the _id\n  **/\n  deleteCert(id){\n    console.log(id);\n    return Certification.findById(id).exec();\n  }\n}\n\nmodule.exports = CertificationDBHandler;\n"]}