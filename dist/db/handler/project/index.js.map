{"version":3,"sources":["../../../../app/db/handler/project/index.js"],"names":["mongoose","require","Project","Promise","ProjectHandler","find","exec","id","findById","query","module","exports"],"mappings":"AAAA;;;;;;AAEA,IAAMA,WAAiBC,QAAQ,UAAR,CAAvB;AACA,IAAMC,UAAiBD,QAAQ,uBAAR,CAAvB;AACAD,SAASG,OAAT,GAAuBF,QAAQ,UAAR,CAAvB;;IAGMG,c;;;;;;;;;AAEJ;;;;8BAIU;AACR,aAAOF,QAAQG,IAAR,CAAa,EAAb,EAAiBC,IAAjB,EAAP;AACD;;AAED;;;;;;;;6BAKSC,E,EAAI;AACX,aAAOL,QAAQM,QAAR,CAAiBD,EAAjB,EAAqBD,IAArB,EAAP;AACD;;AAED;;;;;;;;yBAKKG,K,EAAO;AACV,aAAOP,QAAQG,IAAR,CAAaI,KAAb,EAAoBH,IAApB,EAAP;AACD;;;;;;AAIHI,OAAOC,OAAP,GAAiBP,cAAjB","file":"index.js","sourcesContent":["'use strict'\n\nconst mongoose       = require('mongoose');\nconst Project        = require('./../../model/project');\nmongoose.Promise     = require('bluebird');\n\n\nclass ProjectHandler {\n\n  /**\n   * findAll()\n   * Returns all projects from the projects collection\n  **/\n  findAll() {\n    return Project.find({}).exec();\n  }\n\n  /**\n   * find()\n   * @param id - the mongo id\n   * Returns project from collection by _id\n  **/\n  findById(id) {\n    return Project.findById(id).exec();\n  }\n\n  /**\n   * find()\n   * @param query - the mongoose query to run.\n   * Returns project(s) from collection by custom query\n  **/\n  find(query) {\n    return Project.find(query).exec();\n  }\n\n}\n\nmodule.exports = ProjectHandler;\n"]}