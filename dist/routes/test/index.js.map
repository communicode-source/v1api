{"version":3,"sources":["../../../app/routes/test/index.js"],"names":["router","Router","route","get","req","res","index","response","status","getStatusCode","json","getJSONData","post","authenticate","session","next","err","msg","userToken","q","s","data","accessToken","cid","options","host","path","setEncoding","on","d","JSON","parse","payName","split","email","id","AT","user","providerid","provider","fname","lname","length","accounttype","e","send","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;AAFA;;;AAKA,IAAMA,SAAS,kBAAQC,MAAR,EAAf;;AAEAD,OAAOE,KAAP,CAAa,GAAb,EAEGC,GAFH;AAAA,uDAEQ,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACmB,eAAWC,KAAX,CAAiBF,GAAjB,EAAsBC,GAAtB,CADnB;;AAAA;AACEE,oBADF;;;AAGJF,gBAAIG,MAAJ,CAAWD,SAASE,aAAT,EAAX,EAAqCC,IAArC,CAA0CH,SAASI,WAAT,EAA1C;;AAHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFR;;AAAA;AAAA;AAAA;AAAA;;AASAX,OAAOE,KAAP,CAAa,YAAb,EACKU,IADL,CACU,mBAASC,YAAT,CAAsB,kBAAtB,EAA0C;AAC5CC,WAAS;AADmC,CAA1C,CADV,EAGQ,UAACV,GAAD,EAAMC,GAAN,EAAWU,IAAX,EAAoB;AACtBV,MAAIG,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB,EAAC,WAAW,2BAAZ,EAArB;AACD,CALL;;AAOAV,OAAOE,KAAP,CAAa,oBAAb,EACGC,GADH,qBACqB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/BA,MAAIG,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB,EAACM,KAAK,KAAN,EAAaC,KAAKb,IAAIc,SAAtB,EAArB;AACD,CAHH;AAIAlB,OAAOE,KAAP,CAAa,IAAb,EACGC,GADH,CACO,UAACgB,CAAD,EAAIC,CAAJ,EAAU;AACb,MAAIC,aAAJ;AACA,MAAMC,cAAc,qMAApB;AACA,MAAMC,MAAM,6CAAZ;AACA,MAAMC,UAAU;AACdC,UAAM,oBADQ;AAEdC,UAAM,8BAA4BJ,WAA5B,GAAwC,gBAAxC,GAAyDC;AAFjD,GAAhB;AAIA;AACA,MAAMnB,MAAM,gBAAMD,GAAN,CAAUqB,OAAV,EAAmB,UAACnB,GAAD,EAAS;AACtCA,QAAIsB,WAAJ,CAAgB,MAAhB;;AAGAtB,QAAIuB,EAAJ,CAAO,MAAP,EAAe,UAACC,CAAD,EAAO;AACpBR,aAAOS,KAAKC,KAAL,CAAWF,CAAX,CAAP;;AAEA;AACA;AACA,UAAMG,UAAU,yBAAyBC,KAAzB,CAA+B,GAA/B,CAAhB;AACA,UAAMC,QAAO,WAAb;AACA,UAAMC,KAAK,eAAX;AACA,UAAMC,KAAK,CAAX;AACA,UAAMC,OAAO;AACXC,oBAAYH,EADD;AAEXI,kBAAU,UAFC;AAGXC,eAAOR,QAAQ,CAAR,CAHI;AAIXS,eAAOT,QAAQA,QAAQU,MAAR,GAAe,CAAvB,CAJI;AAKXR,eAAOA,KALI;AAMXS,qBAAaP;AANF,OAAb;AAQD,KAjBD;AAoBD,GAxBW,CAAZ;AAyBAhC,MAAIwB,EAAJ,CAAO,OAAP,EAAgB,UAACgB,CAAD,EAAO;AACrBxB,MAAEyB,IAAF,CAAO,KAAP;AACD,GAFD;AAGD,CAtCH;;AAwCAC,OAAOC,OAAP,GAAiB/C,MAAjB","file":"index.js","sourcesContent":["import express, { Router } from 'express';\nimport passport from 'passport';\nimport https from 'https';\n// Require the TestController\nimport controller from './../../controller/test';\nimport {requireLogin} from './../../middleware/auth';\n\n\nconst router = express.Router();\n\nrouter.route('/')\n\n  .get( async (req, res) => {\n    const response = await controller.index(req, res);\n\n    res.status(response.getStatusCode()).json(response.getJSONData());\n  });\n\n\nrouter.route('/user/make')\n    .post(passport.authenticate('local-signup-dev', {\n        session: false\n    }), (req, res, next) => {\n      res.status(200).json({\"Message\": \"Created User Successfully\"});\n    });\n\nrouter.route('/testMiddle/:token')\n  .get(requireLogin, (req, res) => {\n    res.status(200).json({err: false, msg: req.userToken});\n  });\nrouter.route('/d')\n  .get((q, s) => {\n    let data;\n    const accessToken = 'EAACVYbE04hoBABkHzfqwQREeslnxMCThs0MAG4YhwbMOZCyq6M2fjGWmzfFZBmL0AkXGSxkXM0cS6qrNz4YGIjH9RRdwTDTxCuSwYTVd0Ucfxt4qpLYJsnEy7wwLFB9TjuzBVuBiaKFv6GXzk230uZAZB0RjLLdSeYwLljVWWHWVxOHNiZA57qvhq6KG5NMEZD';\n    const cid = '164246817399322|E5QlQISNUx-TJ6fnF7PnqGwiRf0';\n    const options = {\n      host: 'graph.facebook.com',\n      path: '/debug_token?input_token='+accessToken+'&access_token='+cid\n    }\n    // const url = \"https://graph.facebook.com/debug_token?input_token=\"+accessToken+\"&access_token=\"+cid.accessToken;\n    const req = https.get(options, (res) => {\n      res.setEncoding('utf8');\n\n\n      res.on('data', (d) => {\n        data = JSON.parse(d);\n\n        // if(data.data.is_valid !== true || data.data.app_id !== facebook.clientID || data.data.user_id !== id)\n        // s.send(false);\n        const payName = 'Cooper Daniel Campbell'.split(\" \");\n        const email= 'ihatehtis';\n        const id = 'this is an id';\n        const AT = 1;\n        const user = {\n          providerid: id,\n          provider: 'facebook',\n          fname: payName[0],\n          lname: payName[payName.length-1],\n          email: email,\n          accounttype: AT\n        }\n      });\n\n\n    });\n    req.on('error', (e) => {\n      s.send(false);\n    })\n  })\n\nmodule.exports = router;\n"]}